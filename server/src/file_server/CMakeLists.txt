cmake_minimum_required(VERSION 2.6)

STRING( REGEX REPLACE ".*/(.*)" "\\1" CURRENT_DIRNAME ${CMAKE_CURRENT_SOURCE_DIR} )
PROJECT(${CURRENT_DIRNAME})
message(STATUS "DIR: ${CURRENT_DIRNAME}")

AUX_SOURCE_DIRECTORY(./ SRC_LIST)

#SET(LIBRARY_OUTPUT_PATH ./)
SET(EXECUTABLE_OUTPUT_PATH  ./)
if(APPLE)
    SET(COMMON_LIB_DIR ../base/pb/lib/mac)
elseif(UNIX)
    SET(COMMON_LIB_DIR ../base/pb/lib/linux)
    SET(COMMON_LIB_DIR ../../3rdparty/lib/linux64)
endif()

ADD_DEFINITIONS( -g -W -Wall -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
-DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
-DAC_HAS_DEBUG -DLINUX_DAEMON -std=c++11)

SET(IMPORT_HEADER_DIR ../../3rdparty/include/)
INCLUDE_DIRECTORIES(../base ../../../proto/gen/cpp/ ${IMPORT_HEADER_DIR})
LINK_DIRECTORIES(../base ${COMMON_LIB_DIR})

#ADD_XXXX必须在TARGET_LINK_LIBRARIES前面，否则会报错
#ADD_LIBRARY(${PROJECTNAME} SHARED/STATIC ${SRC_LIST})
ADD_EXECUTABLE(${CURRENT_DIRNAME} ${SRC_LIST})

TARGET_LINK_LIBRARIES(${CURRENT_DIRNAME} base protobuf-lite pthread log4cxx jsoncpp) 
