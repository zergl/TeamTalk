cmake_minimum_required(VERSION 2.6)

STRING( REGEX REPLACE ".*/(.*)" "\\1" CURRENT_DIRNAME ${CMAKE_CURRENT_SOURCE_DIR} )
PROJECT(${CURRENT_DIRNAME})
message(STATUS "BUILDING : ${CURRENT_DIRNAME}")

AUX_SOURCE_DIRECTORY(./ SRC_LIST)
AUX_SOURCE_DIRECTORY(./business SRC_LIST2)

#SET(LIBRARY_OUTPUT_PATH ./)
SET(EXECUTABLE_OUTPUT_PATH  ./)

ADD_DEFINITIONS( -g -W -Wall -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
-DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
-DAC_HAS_DEBUG -DLINUX_DAEMON -std=c++11)

SET(IMPORT_HEADER_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty/include)
set(PROTO_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../proto/gen/cpp)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/.. ${IMPORT_HEADER_DIR} ${PROTO_SRC_DIR})

SET(IMPORT_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty/lib/linux64)
LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../base ${IMPORT_LIB_DIR})

#ADD_XXXX必须在TARGET_LINK_LIBRARIES前面，否则会报错
#ADD_LIBRARY(${PROJECTNAME} SHARED/STATIC ${SRC_LIST})
ADD_EXECUTABLE(${CURRENT_DIRNAME} ${SRC_LIST} ${SRC_LIST2})

TARGET_LINK_LIBRARIES(${CURRENT_DIRNAME} base protobuf-lite pthread apr-1 aprutil-1 log4cxx jsoncpp crypto curl mysqlclient hiredis ssl dl uuid)
